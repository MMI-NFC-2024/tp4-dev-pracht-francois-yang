---
import Layout from "../layouts/Layout.astro";
---

<Layout>
    <div class="container mx-auto px-4 py-8">
        <!-- Navigation -->
        <nav class="mb-8">
            <a 
                href="/" 
                class="inline-flex items-center bg-gray-500 hover:bg-gray-600 text-white font-medium py-2 px-4 rounded-lg transition-colors duration-200 shadow-md hover:shadow-lg"
            >
                ← Retour à l'index
            </a>
        </nav>

        <!-- Title -->
        <div class="text-center mb-8">
            <h1 class="text-3xl font-bold text-gray-800 mb-2">Filtres Multiples de l'industrie</h1>
            <p class="text-lg text-gray-600">Filtrez les données par type, date et chômeurs</p>
        </div>

        <!-- Filters -->
        <div class="bg-white rounded-lg shadow-lg p-6 border border-gray-200 mb-8">
            <h2 class="text-xl font-semibold mb-4 text-gray-700">Filtres</h2>
            <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
                <div>
                    <label for="industry" class="block text-sm font-medium text-gray-700 mb-2">Industrie :</label>
                    <select name="industry" id="industry" class="w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500">
                        <option value="">Toutes les industries</option>
                        <option value="Wholesale and Retail Trade">Commerce de gros et de détail</option>
                        <option value="Manufacturing">Industrie manufacturière</option>
                        <option value="Leisure and hospitality">Loisirs et hôtellerie</option>
                        <option value="Business services">Services aux entreprises</option>
                        <option value="Construction">Construction</option>
                        <option value="Education and Health">Éducation et santé</option>
                        <option value="Government">Gouvernement</option>
                        <option value="Finance">Finance</option>
                        <option value="Self-employed">Travailleur indépendant</option>
                        <option value="Other">Autre</option>
                        <option value="Transportation and Utilities">Transport et services publics</option>
                    </select>
                </div>
                
                <div>
                    <label for="dateRange" class="block text-sm font-medium text-gray-700 mb-2">Période :</label>
                    <select name="dateRange" id="dateRange" class="w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500">
                        <option value="">Toutes les périodes</option>
                        <option value="2000-2002">2000-2002</option>
                        <option value="2003-2005">2003-2005</option>
                        <option value="2006-2010">2006-2010</option>
                       
                    </select>
                </div>
                
                <div>
                    <label for="unemploymentLevel" class="block text-sm font-medium text-gray-700 mb-2">Niveau de chômage :</label>
                    <select name="unemploymentLevel" id="unemploymentLevel" class="w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500">
                        <option value="">Tous les niveaux</option>
                        <option value="above">Au-dessus de la moyenne</option>
                        <option value="below">En-dessous de la moyenne</option>
                    </select>
                </div>
            </div>
            <div class="mt-4 p-3 bg-gray-50 rounded-md">
                <p class="text-sm text-gray-600">
                    <span class="font-semibold">Moyenne générale du chômage :</span> 
                    <span id="averageValue" class="text-blue-600">Calcul en cours...</span>
                </p>
            </div>
        </div>

        <!-- Chart Container -->
        <div class="bg-white rounded-lg shadow-lg p-6 border border-gray-200">
            <h2 class="text-xl font-semibold mb-4 text-gray-700">Graphique des industries</h2>
            <div class="flex justify-center">
                <div id="myplot" class="w-full max-w-4xl"></div>
            </div>
        </div>
    </div>
</Layout>

<script>
    // Importe la librairie Plot d'ObservableHQ
    import * as Plot from "@observablehq/plot";
    // Importe les données des industries depuis un fichier JSON
    import industries from "../assets/industries.json";

    // Calcul de la moyenne du chômage
    const averageUnemployed = industries.reduce((sum: number, d: any) => sum + d.unemployed, 0) / industries.length;

    // Récupère les éléments select pour les filtres
    const industrySelect = document.getElementById("industry") as HTMLSelectElement | null;
    const dateSelect = document.getElementById("dateRange") as HTMLSelectElement | null;
    const unemploymentLevelSelect = document.getElementById("unemploymentLevel") as HTMLSelectElement | null;

    // Affiche la moyenne dans l'interface
    const averageElement = document.getElementById("averageValue");
    if (averageElement) {
        averageElement.textContent = `${Math.round(averageUnemployed)} chômeurs`;
    }

    // Fonction pour vérifier si une date est dans une plage donnée
    function isDateInRange(dateStr: string, range: string): boolean {
        const date = new Date(dateStr);
        const year = date.getFullYear();
        
        switch (range) {
            case "2000-2002": return year >= 2000 && year <= 2002;
            case "2003-2005": return year >= 2003 && year <= 2005;
            case "2006-2010": return year >= 2006 && year <= 2010;

            default: return true;
        }
    }

    // Fonction pour afficher le graphique
    function renderPlot() {
        // Récupère les valeurs sélectionnées
        const selectedIndustry = industrySelect?.value;
        const selectedDate = dateSelect?.value;
        const unemploymentLevel = unemploymentLevelSelect?.value;

        const plotDiv = document.getElementById("myplot");
        // Vide le contenu précédent de la div
        if (plotDiv) plotDiv.innerHTML = "";
        
        // Crée le graphique avec Plot
        const plot = Plot.plot({
            marks: [
                Plot.line(industries, {
                    x: "date",
                    y: "unemployed",
                    stroke: "industry",
                    title: (d: any) => `${d.industry} (${new Date(d.date).getFullYear()}): ${d.unemployed} chômeurs`,
                    filter: (d: any) => {
                        // Filtre par industrie
                        const industryMatch = !selectedIndustry || d.industry === selectedIndustry;
                        
                        // Filtre par période
                        const dateMatch = !selectedDate || isDateInRange(d.date, selectedDate);
                        
                        // Filtre par niveau de chômage par rapport à la moyenne
                        let unemploymentMatch = true;
                        if (unemploymentLevel === "above") {
                            unemploymentMatch = d.unemployed > averageUnemployed;
                        } else if (unemploymentLevel === "below") {
                            unemploymentMatch = d.unemployed <= averageUnemployed;
                        }
                        
                        return industryMatch && dateMatch && unemploymentMatch;
                    },
                }),
            ],
            x: { type: "time", label: "Date" },
            y: { label: "Nombre de chômeurs" },
            color: { legend: true }
        });
        
        // Ajoute le graphique à la div
        if (plotDiv) plotDiv.appendChild(plot);
    }

    // Ajoute des écouteurs d'événement pour tous les filtres
    industrySelect?.addEventListener("change", renderPlot);
    dateSelect?.addEventListener("change", renderPlot);
    unemploymentLevelSelect?.addEventListener("change", renderPlot);

    // Affiche le graphique au chargement de la page
    renderPlot();
</script>
